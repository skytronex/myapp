name: Build and Deploy to Proxmox

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optional multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.IMAGE }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH agent and add key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PROXMOX_SSH_PRIVATE_KEY }}

      - name: Ensure known_hosts contains PROXMOX_HOST
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.PROXMOX_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Proxmox host (pull & restart container)
        env:
          IMAGE: ${{ secrets.IMAGE }}
          PROXMOX_HOST: ${{ secrets.PROXMOX_HOST }}
          PROXMOX_USER: ${{ secrets.PROXMOX_USER }}
        run: |
          ssh -o StrictHostKeyChecking=yes ${PROXMOX_USER}@${PROXMOX_HOST} bash -s <<'SSH_EOF'
            set -euo pipefail
            if command -v docker >/dev/null 2>&1; then
              RUNTIME=docker
            elif command -v podman >/dev/null 2>&1; then
              RUNTIME=podman
            else
              echo "No container runtime found (docker or podman)" >&2
              exit 1
            fi
            echo "Using runtime: $RUNTIME"
            $RUNTIME pull "${IMAGE}"
            $RUNTIME rm -f myapp-container || true
            $RUNTIME run -d --name myapp-container -p 8080:8080 --restart unless-stopped "${IMAGE}"
          SSH_EOF
